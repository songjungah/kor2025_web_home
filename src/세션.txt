[ 서버 ]
    1. 정의 : 클라이언트와 서버 간의 HTTP 이용한 요청과 응답을 반환하는 프로그램
    2. 종류 :
        0. Apache : C 기반의 서버 프로그램, 정적 페이지 지원, HTML/CSS/JS
        1. Tomcat : 자바 기반의 웹서버 프로그램, 동적 페이지 지원, JSP/타임리프
        2. Apache Tomcat : 정적페이지 와 동적페이지를 모두 지원
            -> Spring boot 는 apache tomcat 내장
            -> 현재 spring boot 3.x 는 Apache Tomcat 10.1 버전 사용.
    3. 웹 서버 포트는 주로 8080
    4. 통신 흐름

    클라이언트(사용자)  ----- HTTP request ----->   웹서버(스프링:톰캣)
    - 브라우저(크롬)   <----- HTTP response -----  @xxxMapping @ResponseBody 등등


[ 세션 ]
    1. 정의 : tomcat(톰캣) 서버에 데이터를 저장하고 관리할 수 있게 제공
        -> Spring boot 프레임워크 사용하면 자동으로 tomcat 내장 서버가 실행
            -> @SpringBootApplication : 자동으로 tomcat 서버가 실행된다.
    2. 목적 :
        1. 상태(데이터) 관리
        2. 인증/권한
        3. 효율적인 데이터 관리
    3. 주 사용처 : 데이터베이스에 저장하지 않고 실시간으로 처리하는 데이터 혹은 보안이 중요한 데이터들
        1. 로그인 상태 유지
        2. (비회원제)장바구니 기능
        3. 사용자 설정값
        4. 실시간 처리 등등
    4. 세션 객체
        1. HttpServletRequest : 서블릿(톰캣) 안에 데이터/정보 요청 객체
        2. .getSession() : 서블릿(톰캣) 안에 세션객체를 호출 함수
    5. 세션에 정보 저장하는 방법
        1. @Autowried private HttpServletRequest request;
        2. HttpSession httpSession = request.getSession();
        3. httpSession.setAttribute("저장할 속성명", 값);
            * 내가 새로운 속성명으로 값 추가를 했다면 그 값 타입은 자동으로 Object 타입으로 변한다.
    6. 세션에 저장된 정보를 반환하는 방법
        1. @Autowried private HttpServletRequest request;
        2. HttpSession httpSession = request.getSession();
        3. httpSession.setAttribute("조회할 속성명");
            * 내가 특정한 속성명의 값을 호출 했다면 그 값 타입은 무조건 Object 타입이다.(타입변환이 필요)
    7. 세션에 저장된 정보를 지우는 방법
        1. @Autowried private HttpServletRequest request;
        2. HttpSession httpSession = request.getSession();
        3. httpSession.removeAttribute("삭제할 속성명");

    * 세션에 저장된 모든 정보들을 Object 타입으로 저장된다.
        -> Object 클래스/타입은 자바의 최상위 클래스로 모든 인스턴스들을 저장할 수 있는 타입이다.
        -> [상속] 다형성이란?? 상속 관계에 자식타입이 부모타입으로 변환, 부모타입이 자식타입으로 변환
            - 업캐스팅(자동타입변환) : 상속 관계에서 자식타입이 부모타입으로 변환
            - 다운캐스팅(강제타입변환) : 부모타입이 자식타입으로 변환
